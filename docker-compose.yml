services:
  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    volumes:
      - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - prom_data:/prometheus
    command:
      - "--config.file=/etc/prometheus/prometheus.yml"
    restart: unless-stopped
    networks: [monitor]
    ports:
      - "9095:9095"

  alertmanager:
    image: prom/alertmanager:latest
    container_name: alertmanager
    volumes:
      - ./alertmanager/alertmanager.yml:/etc/alertmanager/alertmanager.yml:ro
    restart: unless-stopped
    networks: [monitor]
    ports:
      - "9093:9093"

  loki:
    image: grafana/loki:3.0.0
    container_name: loki
    command: [ "-config.file=/etc/loki/local-config.yaml" ]
    volumes:
      - loki_data:/loki
    restart: unless-stopped
    networks: [monitor]
    ports:
      - "3100:3100"

  promtail:
    image: grafana/promtail:3.0.0
    container_name: promtail
    volumes:
      - /var/log:/var/log:ro
      - ./promtail/promtail.yaml:/etc/promtail/config.yml:ro
    command: ["-config.file=/etc/promtail/config.yml"]
    restart: unless-stopped
    networks: [monitor]

  grafana:
    image: grafana/grafana-oss:latest
    container_name: grafana
    environment:
      GF_SECURITY_ADMIN_USER: admin
      GF_SECURITY_ADMIN_PASSWORD: admin
    volumes:
      - grafana_data:/var/lib/grafana
    depends_on: [prometheus, loki]
    restart: unless-stopped
    networks: [monitor]
    ports:
      - "3333:3333"

  node-exporter:
    image: prom/node-exporter:latest
    container_name: node-exporter
    restart: unless-stopped
    networks: [monitor]
    expose:
      - "9100"

  cadvisor:
    image: gcr.io/cadvisor/cadvisor:latest
    container_name: cadvisor
    restart: unless-stopped
    networks: [monitor]
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:ro
      - /sys:/sys:ro
      - /var/lib/docker/:/var/lib/docker:ro
    expose:
      - "8080"

  portainer:
    image: portainer/portainer-ce:2.20.3
    container_name: portainer
    command: -H unix:///var/run/docker.sock
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - portainer_data:/data
    restart: unless-stopped
    networks: [monitor]
    ports:
      - "9443:9443"   
      - "9000:9000"

networks:
  monitor:
    driver: bridge

volumes:
  prom_data:
  loki_data:
  grafana_data:
  portainer_data:
